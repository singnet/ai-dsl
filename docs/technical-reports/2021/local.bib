@misc{GoertzelGeisweillerBlog,
	author = {Ben Goertzel, Nil Geisweiller},
	title = {AI-DSL: Toward a General-Purpose Description Language for AI Agents},
	url = {https://blog.singularitynet.io/ai-dsl-toward-a-general-purpose-description-language-for-ai-agents-21459f691b9e},
	year = {2020}
}

@misc{YvesHellenschmidt2002,
	author = {Yves Forkl, Michael Hellenschmidt},
	location = {Kloster Irsee, Germany},
	pages = {17--21},
	publisher = {Fraunhofer Institute},
	series = {Tutorial and Research Workshop on Multi-Modal Dialogue in Mobile Environments},
	url={https://core.ac.uk/display/57029957},
	title = {Mastering agent communication in {EMBASSI} on the basis of a formal ontology},
	year = {2002}
}

@misc{martin_translations_nodate,
	author = {Martin, Philippe},
	file = {Translations between RDF+OWL, N3, KIF, UML, FL, FCG and FE:/home/kabir/Zotero/storage/JQ9VDTGT/comparisons.html:text/html},
	language = {English},
	title = {Translations between {RDF}+{OWL}, {N3}, {KIF}, {UML}, {FL}, {FCG} and {FE}},
	url = {http://www.webkb.org/doc/model/comparisons.html},
	urldate = {2021-05-12}
}

@misc{singularitynet_foundation_phasetwo_2021,
	title = {{SingularityNET Foundation}, {PhaseTwo} {Information} {Memorandum}},
	url = {https://rebrand.ly/SNPhase2},
	language = {English},
	publisher = {SingularityNET Foundation},
	month = feb,
	year = {2021},
}

@inproceedings{brady_resource-dependent_2015,
	address = {Cham},
	title = {Resource-{Dependent} {Algebraic} {Effects}},
	isbn = {978-3-319-14675-1},
	abstract = {There has been significant interest in recent months in finding new ways to implement composable and modular effectful programs using handlers of algebraic effects. In my own previous work, I have shown how an algebraic effect system (called effects) can be embedded directly in a dependently typed host language. Using dependent types ought to allow precise reasoning about programs; however, the reasoning capabilities of effects have been limited to simple state transitions which are known at compile-time. In this paper, I show how effects can be extended to support reasoning in the presence of run-time state transitions, where the result may depend on run-time information about resource usage (e.g. whether opening a file succeeded). I show how this can be used to build expressive APIs, and to specify and verify the behaviour of interactive, stateful programs. I illustrate the technique using a file handling API, and an interactive game.},
	booktitle = {Trends in {Functional} {Programming}},
	publisher = {Springer International Publishing},
	author = {Brady, Edwin},
	editor = {Hage, Jurriaan and McCarthy, Jay},
	year = {2015},
	pages = {18--33},
	file = {Brady.2014.RewourceDependentAlgebraicEffects.pdf:/home/kabir/vveitas@gmail.com/library/ai-dsl/Brady.2014.RewourceDependentAlgebraicEffects.pdf:application/pdf},
}

@article{gruber_translation_1993,
	title = {A translation approach to portable ontology specifications},
	volume = {5},
	issn = {1042-8143},
	url = {https://www.sciencedirect.com/science/article/pii/S1042814383710083},
	doi = {https://doi.org/10.1006/knac.1993.1008},
	abstract = {To support the sharing and reuse of formally represented knowledge among AI systems, it is useful to define the common vocabulary in which shared knowledge is represented. A specification of a representational vocabulary for a shared domain of discourse—definitions of classes, relations, functions, and other objects—is called an ontology. This paper describes a mechanism for defining ontologies that are portable over representation systems. Definitions written in a standard format for predicate calculus are translated by a system called Ontolingua into specialized representations, including frame-based systems as well as relational languages. This allows researchers to share and reuse ontologies, while retaining the computational benefits of specialized implementations. We discuss how the translation approach to portability addresses several technical problems. One problem is how to accommodate the stylistic and organizational differences among representations while preserving declarative content. Another is how to translate from a very expressive language into restricted languages, remaining system-independent while preserving the computational efficiency of implemented systems. We describe how these problems are addressed by basing Ontolingua itself on an ontology of domain-independent, representational idioms.},
	number = {2},
	journal = {Knowledge Acquisition},
	author = {Gruber, Thomas R.},
	year = {1993},
	pages = {199--220},
	file = {Gruber.1993.ATranslationApproachToPortableOntologySpecifications.pdf:/home/kabir/vveitas@gmail.com/library/ai-dsl/Gruber.1993.ATranslationApproachToPortableOntologySpecifications.pdf:application/pdf},
}

@InCollection{sep-logic-ontology,
	author       =	{Hofweber, Thomas},
	title        =	{{Logic and Ontology}},
	booktitle    =	{The {Stanford} Encyclopedia of Philosophy},
	editor       =	{Edward N. Zalta},
	howpublished =	{\url{https://plato.stanford.edu/archives/spr2021/entries/logic-ontology/}},
	year         =	{2021},
	edition      =	{{S}pring 2021},
	publisher    =	{Metaphysics Research Lab, Stanford University}
}

@misc{nunet_nunet_2021,
	title = {{NuNet} architecture and service discovery principles (for {AI}-{DSL})},
	url = {https://www.youtube.com/watch?v=GKH9C8pb3yw},
	urldate = {2021-05-26},
	author = {{NuNet}},
	month = may,
	year = {2021}
}

@misc{gRPC,
	title = {{gRPC}, {gRPC Homepage}},
	url = {https://grpc.io/},
	year = {2021}
}

@misc{Protobuf,
	title = {{Protocol Buffers}, {Protocol Buffers Homepage}},
	url = {https://developers.google.com/protocol-buffers/},
	year = {2021}
}

@misc{SNETExampleService,
	title = {{SingularityNET example service}, {example-service GitHub Repository}},
	url = {https://github.com/singnet/example-service},
	year = {2021}
}

@misc{SNETTutorial,
	title = {{SingularityNET Tutorial}, {SingularityNET Tutorial Webpage}},
	url = {https://dev.singularitynet.io/tutorials/publish},
	year = {2021}
}

@misc{SNETRegistry,
	title = {{SingularityNET Registry}, {SingularityNET Registry Documentation Webpage}},
	url = {https://dev.singularitynet.io/docs/concepts/registry/},
	year = {2021}
}

@misc{AIDSLRelatedWork,
	title = {{AI-DSL Related Work}, {AI-DSL Related Work GitHub Issue 43}},
	url = {https://github.com/singnet/ai-dsl/issues/43},
	year = {2021}
}

@misc{Idris,
	title = {{Idris}, {Idris Homepage}},
	url = {https://www.idris-lang.org/},
	year = {2021}
}

@misc{Vectors,
	title = {{Idris2}, {Idris2 Vectors Documentation}},
	url = {https://idris2.readthedocs.io/en/latest/tutorial/typesfuns.html#vectors},
	year = {2021}
}

@misc{AIDSLRepo,
	title = {{AI-DSL}, {AI-DSL GitHub Repository}},
	url = {https://github.com/singnet/ai-dsl/},
	year = {2021}
}

@misc{ExternalToolsRepo,
	title = {{OpenCog External Tools}, {OpenCog External Tools GitHub Repository}},
	url = {https://github.com/opencog/external-tools/},
	year = {2021}
}

@misc{SNETDocumentationServiceSetup,
	title = {{SingularityNET Developer Portal}, {Service Setup Web Page}},
	url = {https://dev.singularitynet.io/docs/ai-developers/service-setup/},
	year = {2021}
}

@misc{NuNetFakeNewsWarningAppRepo,
  title = {{NuNet}, {Program Graph of fake News Warning Application}},
  url = {https://gitlab.com/nunet/fake-news-detection/fake\_news\_score/-/blob/master/service/dag.json},
  year = {2021}
}

@inproceedings{kalibatiene_survey_2011,
	address = {Berlin, Heidelberg},
	title = {Survey on {Ontology} {Languages}},
	isbn = {978-3-642-24511-4},
	booktitle = {Perspectives in {Business} {Informatics} {Research}},
	publisher = {Springer Berlin Heidelberg},
	author = {Kalibatiene, Diana and Vasilecas, Olegas},
	editor = {Grabis, Janis and Kirikova, Marite},
	year = {2011},
	pages = {124--141},
	file = {chp3A10.10072F978-3-642-24511-4_10.pdf:/home/kabir/vveitas@gmail.com/library/ai-dsl/chp3A10.10072F978-3-642-24511-4_10.pdf:application/pdf},
}

@unpublished{pease_standard_2009,
	type = {Technical {Report}},
	title = {Standard {Upper} {Ontology} {Knowledge} {Interchange} {Format}},
	url = {http://ontolog.cim3.net/file/resource/reference/SIGMA-kee/suo-kif.pdf},
	language = {English},
	urldate = {2021-05-04},
	author = {Pease, Adam},
	month = jun,
	year = {2009},
}

@inproceedings{NilesPease2001,
author = {Niles, Ian and Pease, Adam},
title = {Towards a Standard Upper Ontology},
year = {2001},
isbn = {1581133774},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/505168.505170},
doi = {10.1145/505168.505170},
booktitle = {Proceedings of the International Conference on Formal Ontology in Information Systems - Volume 2001},
pages = {2–9},
numpages = {8},
keywords = {ontologies, knowledge interchange format},
location = {Ogunquit, Maine, USA},
series = {FOIS '01}
}

@unpublished{pease_sigma_2001,
	title = {The {Sigma} {Ontology} {Development} {Environment}},
	url = {http://www.ceur-ws.org/Vol-71/Pease.pdf},
	language = {English},
	author = {Pease, Adam},
	year = {2001},
	file = {Pease-IJCAI2003 (1).pdf:/home/kabir/vveitas@gmail.com/library/ai-dsl/Pease-IJCAI2003 (1).pdf:application/pdf},
}

@misc{Baumgartner_automatedreasoning,
    author = {Peter Baumgartner and Fabian M. Suchanek},
    title = {Automated Reasoning Support for SUMO/KIF},
    year = {2005}
}

@misc{Urban_anoverview,
    author = {Josef Urban},
    title = {An Overview of Methods for Large-Theory Automated Theorem Proving},
    year = {2011}
}

@inproceedings{Alvez_evaluating_atp_adimen_SUMO,
	address = {Coimbra, Portugal},
	title = {Evaluating Automated Theorem Provers Using Adimen-SUMO},
	booktitle = {Proceedings of the 3rd Vampire Workshop at the 8th International Joint Conference on Automated Reasoning (IJCAR 2016)},
	publisher = {Springer International Publishing},
	author = {Javier Álvez, Paqui Lucio, German Rigau},
	year = {2016},
}

@inproceedings{SojakovaKristina2009,
author="Sojakova, Kristina and Rabe, Florian",
editor="Corradini, Andrea and Montanari, Ugo",
title="Translating a Dependently-Typed Logic to First-Order Logic",
booktitle="Recent Trends in Algebraic Development Techniques",
year="2009",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="326--341",
abstract="DFOL is a logic that extends first-order logic with dependent types. We give a translation from DFOL to FOL formalized as an institution comorphism and show that it admits the model expansion property. This property together with the borrowing theorem implies the soundness of borrowing --- a result that enables us to reason about entailment in DFOL by using automated tools for FOL. In addition, the translation permits us to deduce properties of DFOL such as completeness, compactness, and existence of free models from the corresponding properties of FOL, and to regard DFOL as a fragment of FOL. We give an example that shows how problems about DFOL can be solved by using the automated FOL prover Vampire. Future work will focus on the integration of the translation into the specification and translation tool HeTS.",
isbn="978-3-642-03429-9"
}

@article{Pease_firstorder,
title = "First order reasoning on a large ontology",
abstract = "We present results of our work on using first order theorem proving to reason over a large ontology (the Suggested Upper Merged Ontology - SUMO), and methods for making SUMO suitable for first order theorem proving. We describe the methods for translating into standard first order format, as well as optimizations that are intended to improve inference performance. We also describe our work in translating SUMO from its native SUO-KIF language into TPTP format.",
author = "Adam Pease and Geoff Sutcliffe",
year = "2007",
month = dec,
day = "1",
language = "English (US)",
volume = "257",
pages = "61--70",
journal = "CEUR Workshop Proceedings",
issn = "1613-0073",
publisher = "CEUR-WS",
note = "21st CADE 2007 Workshop on Empirically Successful Automated Reasoning in Large Theories, ESARLT 2007 ; Conference date: 17-07-2007 Through 17-07-2007",
}

@inproceedings{Altenkirch05whydependent,
    author = {Thorsten Altenkirch and Conor Mcbride and James Mckinna},
    title = {Why dependent types matter},
    booktitle = {In preparation, http://www.e-pig.org/downloads/ydtm.pdf},
    year = {2005}
}

@misc{DTL,
	title = {Wikipedia. Category:Dependently typed languages},
	url = {https://en.wikipedia.org/wiki/Category:Dependently_typed_languages}
}

@misc{Gruber_anontology,
    author = {Thomas R. Gruber and Gregory R. Olsen},
    title = {An Ontology for Engineering Mathematics Abstract},
    year = {1994}
}

@inproceedings{Gruber92towarda,
    author = {Thomas R. Gruber and Jay M. Tenenbaum and Jay C. Weber},
    title = {Toward a Knowledge Medium for Collaborative Product Development},
    booktitle = {In J. S. Gero (Eds.), Artificial Intelligence in Design ‘92},
    year = {1992},
    pages = {413--432},
    publisher = {Kluwer Academic Publishers}
}

@inproceedings{Brazier1995,
author = {Brazier, Frances and Dunin-Keplicz, Barbara and Jennings, Nick and Treur, Jan},
year = {1995},
month = {01},
pages = {25-32},
title = {Formal Specification of Multi-Agent Systems: A Real-World Case.}
}

@article{Bourahla20055,
title = {Formal Specification and Verification of Multi-Agent Systems},
journal = {Electronic Notes in Theoretical Computer Science},
volume = {123},
pages = {5-17},
year = {2005},
note = {Proceedings of the 11th Workshop on Logic, Language, Information and Computation (WoLLIC 2004)},
issn = {1571-0661},
doi = {https://doi.org/10.1016/j.entcs.2004.04.042},
url = {https://www.sciencedirect.com/science/article/pii/S1571066105000447},
author = {Mustapha Bourahla and Mohamed Benmohamed},
keywords = {Agents, Multi-Agent Systems, Multi-Modal Branching-Time Logic, Formal Specification and Verification, Model Checking},
abstract = {Multi-agent systems are increasingly complex, and the problem of their verification and validation is acquiring increasing importance. In this paper we show how a well known and effective verification technique, model checking, can be generalized to deal with multi-agent systems. This paper explores a particular type of multi-agent system, in which each agent is viewed as having the three mental attitudes of belief (B), desire (D), and intention (I). We use a multi-modal branching-time logic BDICTL, with a semantics that is grounded in traditional decision theory and a possible-worlds framework. A preliminary implementation of the approach shows promising results.}
}

@article{Desouky2007,
author = {El-Desouky, Ali and Ali, Hesham and Elghamrawy, Sally},
year = {2007},
month = {04},
pages = {},
title = {A Proposed Architecture for Distributed Multi-Agent Intelligent System (DMAIS)}
}

@article{Roelofs2020,
author = {Roelofs, Martijn and Vos, Roelof},
year = {2020},
month = {12},
pages = {1-25},
title = {Automatically inferring technology compatibility with an ontology and graph rewriting rules},
volume = {32},
journal = {Journal of Engineering Design},
doi = {10.1080/09544828.2020.1860202}
}

@inproceedings{Witherell2009,
author = {Witherell, Paul and Krishnamurty, Sundar and Grosse, Ian and Wileden, Jack},
year = {2009},
month = {01},
pages = {685-697},
title = {FIDOE: A Framework for Intelligent Distributed Ontologies in Engineering},
doi = {10.1115/DETC2008-50099}
}

@misc{SWRL,
	title = {{SWRL: A Semantic Web Rule Language
Combining OWL and RuleML}},
	url = {https://www.w3.org/Submission/SWRL/},
	year = {2004}
}

@misc{KIF,
	title = {{Knowledge Interchange Format (KIF)}},
	url = {http://www-ksl.stanford.edu/knowledge-sharing/kif/},
	year = {2021}
}

@article{Labrou99thecurrent,
    author = {Yannis Labrou and Tim Finin and Yun Peng},
    title = {The current landscape of Agent Communication Languages},
    journal = {INTELLIGENT SYSTEMS},
    year = {1999},
    volume = {14},
    pages = {45--52}
}

@misc{FIPAACL,
	title = {{FIPA-ACL Standard Specification}},
	url = {http://www.fipa.org/repository/standardspecs.html/},
	year = {2012}
}

@misc{FunctionOntology,
	title = {{Function Ontology}, {Function Ontology Homepage}},
	url = {https://fno.io/},
	year = {2021}
}

@article{DeMeester2020,
title = {Implementation-independent function reuse},
journal = {Future Generation Computer Systems},
volume = {110},
pages = {946-959},
year = {2020},
issn = {0167-739X},
doi = {https://doi.org/10.1016/j.future.2019.10.006},
url = {https://www.sciencedirect.com/science/article/pii/S0167739X19303723},
author = {Ben {De Meester} and Tom Seymoens and Anastasia Dimou and Ruben Verborgh},
keywords = {Function, Linked data, Reuse},
abstract = {Functions are essential building blocks of information retrieval and information management. However, efforts implementing these functions are fragmented: one function has multiple implementations, within specific development contexts. This inhibits reuse: metadata of functions and associated implementations need to be found across various search interfaces, and implementation integration requires human interpretation and manual adjustments. An approach is needed, independent of development context and enabling description and exploration of functions and (automatic) instantiation of associated implementations. In this paper, after collecting scenarios and deriving corresponding requirements, we (i) propose an approach that facilitates functions’ description, publication, and exploration by modeling and publishing abstract function descriptions and their links to concrete implementations; and (ii) enable implementations’ automatic instantiation by exploiting those published descriptions. This way, we can link to existing implementations, and provide a uniform detailed search interface across development contexts. The proposed model (the Function Ontology) and the publication method following the Linked Data principles using standards, are deemed sufficient for this task, and are extensible to new development contexts. The proposed set of tools (the Function Hub and Function Handler) are shown to fulfill the collected requirements, and the user evaluation proves them being perceived as a valuable asset during software retrieval. Our work thus improves developer experience for function exploration and implementation instantiation.}
}

@inproceedings{Abbot1995,
author = {Abbott, John and Leeuwen, André and Strotmann, Andreas},
year = {1995},
month = {07},
pages = {},
title = {Objectives of OpenMath: Towards a Standard for Exchanging Mathematical Information}
}

@misc{nevzorova2014ontomathpro,
      title={$OntoMath^{PRO}$ Ontology: A Linked Data Hub for Mathematics},
      author={Olga Nevzorova and Nikita Zhiltsov and Alexander Kirillovich and Evgeny Lipachev},
      year={2014},
      eprint={1407.4833},
      archivePrefix={arXiv},
      primaryClass={cs.AI}
}

@InProceedings{Elizarov2017,
author="Elizarov, Alexander
and Kirillovich, Alexander
and Lipachev, Evgeny
and Nevzorova, Olga",
editor="Kalinichenko, Leonid
and Kuznetsov, Sergei O.
and Manolopoulos, Yannis",
title="Digital Ecosystem OntoMath: Mathematical Knowledge Analytics and Management",
booktitle="Data Analytics and Management in Data Intensive Domains",
year="2017",
publisher="Springer International Publishing",
address="Cham",
pages="33--46",
abstract="A mathematical knowledge management technology is discussed, its basic ideas, approaches and results are based on targeted ontologies in the field of mathematics. The solution forms the basis of the specialized digital ecosystem OntoMath which consists of a set of ontologies, text analytics tools and applications for managing mathematical knowledge. The studies are in line with the project aimed to create a World Digital Mathematical Library whose objective is to design a distributed system of interconnected repositories of digitized versions of mathematical documents.",
isbn="978-3-319-57135-5"
}

@article{DBLP:journals/corr/SeshiaS16,
  author    = {Sanjit A. Seshia and
               Dorsa Sadigh},
  title     = {Towards Verified Artificial Intelligence},
  journal   = {CoRR},
  volume    = {abs/1606.08514},
  year      = {2016},
  url       = {http://arxiv.org/abs/1606.08514},
  archivePrefix = {arXiv},
  eprint    = {1606.08514},
  timestamp = {Mon, 13 Aug 2018 16:48:19 +0200},
  biburl    = {https://dblp.org/rec/journals/corr/SeshiaS16.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{HAND2020100037,
title = {Validating and Verifying AI Systems},
journal = {Patterns},
volume = {1},
number = {3},
pages = {100037},
year = {2020},
issn = {2666-3899},
doi = {https://doi.org/10.1016/j.patter.2020.100037},
url = {https://www.sciencedirect.com/science/article/pii/S2666389920300428},
author = {David J. Hand and Shakeel Khan},
abstract = {AI systems will only fulfill their promise for society if they can be relied upon. This means that the role and task of the system must be properly formulated; that the system must be bug free, be based on properly representative data, and can cope with anomalies and data quality issues; and that its output is sufficiently accurate for the task.}
}

@incollection{MENZIES2005153,
title = {Verification and Validation and Artificial Intelligence},
series = {Advances in Computers},
publisher = {Elsevier},
volume = {65},
pages = {153-201},
year = {2005},
issn = {0065-2458},
doi = {https://doi.org/10.1016/S0065-2458(05)65004-8},
url = {https://www.sciencedirect.com/science/article/pii/S0065245805650048},
author = {Tim Menzies and Charles Pecheur},
abstract = {Artificial Intelligence (AI) is useful. AI can deliver more functionality for reduced cost. AI should be used more widely but won't be unless developers can trust adaptive, nondeterministic, or complex AI systems. Verification and validation is one method used by software analysts to gain that trust. AI systems have features that make them hard to check using conventional V&V methods. Nevertheless, as we show in this chapter, there are enough alternative readily-available methods that enable the V&V of AI software.}
}

@inproceedings{Pineyro2019,
author = {Piñeyro, Leonardo and Pardo, Alberto and Viera, Marcos},
year = {2019},
month = {09},
pages = {46-53},
title = {Structure verification of deep neural networks at compilation time using dependent types},
isbn = {978-1-4503-7638-9},
journal = {SBLP 2019: Proceedings of the XXIII Brazilian Symposium on Programming Languages},
doi = {10.1145/3355378.3355379}
}

@inproceedings{Diehl2011,
author = {Larry Diehl},
year = {2011},
title = {Veriﬁed Stack-Based Genetic Programming via Dependent Types},
journal = {Approaches andApplications of Inductive Programming (AAIP)}
}

@misc{SohamNeural,
	author = {Soham Chowdhury},
	title = {GitHub Gist page of Neural.idr},
	url = {https://gist.github.com/mrkgnao/a45059869590d59f05100f4120595623}
}


@InProceedings{Monads1993,
author="Wadler, Philip",
editor="Broy, Manfred",
title="Monads for functional programming",
booktitle="Program Design Calculi",
year="1993",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="233--264",
abstract="The use of monads to structure functional programs is described. Monads provide a convenient framework for simulating effects found in other languages, such as global state, exception handling, output, or non-determinism. Three case studies are looked at in detail: how monads ease the modification of a simple evaluator; how monads act as the basis of a datatype of arrays subject to in-place update; and how monads can be used to build parsers.",
isbn="978-3-662-02880-3"
}


@inproceedings{EmbedDepth2014,
author = {Gibbons, Jeremy and Wu, Nicolas},
title = {Folding Domain-Specific Languages: Deep and Shallow Embeddings (Functional Pearl)},
year = {2014},
isbn = {9781450328739},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2628136.2628138},
doi = {10.1145/2628136.2628138},
abstract = {A domain-specific language can be implemented by embedding within a general-purpose host language. This embedding may be deep or shallow, depending on whether terms in the language construct syntactic or semantic representations. The deep and shallow styles are closely related, and intimately connected to folds; in this paper, we explore that connection.},
booktitle = {Proceedings of the 19th ACM SIGPLAN International Conference on Functional Programming},
pages = {339–347},
numpages = {9},
keywords = {deep and shallow embedding, folds, domain-specific languages},
location = {Gothenburg, Sweden},
series = {ICFP '14}
}

@misc{OWL,
	title = {OWL 2 Web Ontology Language Document Overview (Second Edition)},
	url = {https://www.w3.org/TR/owl2-overview/},
	year = {2012}
}
